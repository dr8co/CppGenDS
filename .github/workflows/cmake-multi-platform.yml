name: Test on macOS and Linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, macos-latest]
        build_type: [Debug, Release]
        c_compiler: [gcc, clang]
        
        include:
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
              
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++-17
            
        exclude:
          - os: macos-latest
            c_compiler: gcc

    steps:
    - name: Install Dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install cmake ninja googletest
        echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> ~/.bash_profile
          
    - name: Install Dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
          wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
          sudo add-apt-repository -y "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main"
          sudo apt update
          sudo apt install -y build-essential cmake ninja-build clang-17 libgtest-dev googletest
      
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}
        -G Ninja

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
